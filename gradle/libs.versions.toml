[versions]
accompanistPermissions = "0.37.2" # Accompanist Permissions
agp = "8.9.1" # Android Gradle Plugin
biometric = "1.1.0" # AndroidX Biometric
hiltAndroid = "2.56.1" # Hilt Android
kotlin = "2.1.20" # Kotlin
coreKtx = "1.16.0" # AndroidX Core KTX
appcompat = "1.7.0" # AndroidX AppCompat
kotlinxSerializationJson = "1.8.1"
ktorServerCore = "3.1.2"
ktorServerNetty = "3.1.2"
ktorSerializationKotlinxJson = "3.1.2"
logbackClassic = "1.5.18"
material = "1.12.0" # Material Design
activity = "1.10.1" # AndroidX Activity
constraintlayout = "2.2.1" # ConstraintLayout
espressoIntent = "3.6.1" # Espresso Intents

# Room
mpandroidchart = "v3.1.0" # MPAndroidChart
roomCommon = "2.7.0" # Room Common
roomKtx = "2.7.0" # Room KTX
retrofit = "2.11.0" # Retrofit
converterGson = "2.11.0" # Retrofit Gson Converter
gson = "2.12.1" # Gson
loggingInterceptor = "5.0.0-alpha.14" # OkHttp Logging Interceptor
navigationFragment = "2.8.9" # Navigation Fragment
navigationUiKtx = "2.8.9" # Navigation UI KTX
navigationFragmentKtx = "2.8.9" # Navigation Fragment KTX
lifecycleProcess = "2.8.7" # Lifecycle Process
coilSvg = "2.7.0" # Coil SVG
coil = "2.7.0" # Coil
junit = "4.13.2" # JUnit
junitVersion = "1.2.1" # AndroidX JUnit
espressoCore = "3.6.1"
jetbrainsKotlinJvm = "2.1.20" # Espresso Core

[libraries]
accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanistPermissions" } # Accompanist Permissions
androidx-biometric = { module = "androidx.biometric:biometric", version.ref = "biometric" } # AndroidX Biometric
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" } # AndroidX Core KTX
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hiltAndroid" } # Hilt Android
hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hiltAndroid" } # Hilt Android Compiler
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" } # AndroidX AppCompat
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
ktor-server-compression = { module = "io.ktor:ktor-server-compression", version.ref = "ktorServerCore" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktorServerCore" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktorSerializationKotlinxJson" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktorServerCore" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktorServerNetty" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktorServerCore" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logbackClassic" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" } # Material Design
androidx-activity = { group = "androidx.activity", name = "activity", version.ref = "activity" } # AndroidX Activity
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" } # ConstraintLayout

# Room dependencies
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "roomCommon" } # Room Compiler
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "roomCommon" } # Room Runtime
androidx-room-common = { group = "androidx.room", name = "room-common", version.ref = "roomCommon" } # Room Common
androidx-room-ktx = { group = "androidx.room", name = "room-ktx", version.ref = "roomKtx" } # Room KTX
mpandroidchart = { module = "com.github.PhilJay:MPAndroidChart", version.ref = "mpandroidchart" } # MPAndroidChart
retrofit = { group = "com.squareup.retrofit2", name = "retrofit", version.ref = "retrofit" } # Retrofit
converter-gson = { group = "com.squareup.retrofit2", name = "converter-gson", version.ref = "converterGson" } # Retrofit Gson Converter
gson = { group = "com.google.code.gson", name = "gson", version.ref = "gson" } # Gson
logging-interceptor = { group = "com.squareup.okhttp3", name = "logging-interceptor", version.ref = "loggingInterceptor" } # OkHttp Logging Interceptor
androidx-navigation-fragment = { group = "androidx.navigation", name = "navigation-fragment", version.ref = "navigationFragment" } # Navigation Fragment
androidx-navigation-ui-ktx = { group = "androidx.navigation", name = "navigation-ui-ktx", version.ref = "navigationUiKtx" } # Navigation UI KTX
androidx-navigation-fragment-ktx = { group = "androidx.navigation", name = "navigation-fragment-ktx", version.ref = "navigationFragmentKtx" } # Navigation Fragment KTX
androidx-lifecycle-process = { group = "androidx.lifecycle", name = "lifecycle-process", version.ref = "lifecycleProcess" } # Lifecycle Process
coil-svg = { group = "io.coil-kt", name = "coil-svg", version.ref = "coilSvg" } # Coil SVG
coil = { group = "io.coil-kt", name = "coil", version.ref = "coil" } # Coil
junit = { group = "junit", name = "junit", version.ref = "junit" } # JUnit
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" } # AndroidX JUnit
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" } # Espresso Core
androidx-espresso-intent = { group = "androidx.test.espresso.intent", name = "espresso-intent", version.ref = "espressoIntent" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
# kapt for Room
org-jetbrains-kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" } # Kotlin KAPT Plugin
hilt-android = { id = "com.google.dagger.hilt.android", version.ref = "hiltAndroid" } # Hilt Android Plugin
android-library = { id = "com.android.library", version.ref = "agp" }  # Android Library Plugin
jetbrains-kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "jetbrainsKotlinJvm" } # Kotlin JVM plugin
